version: 2
project_name: opentelemetry-collector-releases
env:
  - TARGET_ARCH={{ .Runtime.Goarch }}
  - COSIGN_YES=true
  - LD_FLAGS=-extldflags=-static
  - BUILD_FLAGS=-trimpath
  - CONTAINER_IMAGE_EPHEMERAL_TAG={{ if .IsNightly }}nightly{{ else }}latest{{ end }}
  - GOPROXY=https://proxy.golang.org,direct
  - GO_TAGS=osusergo,netgo
  - CGO_ENABLED=0
release:
  replace_existing_artifacts: true
builds:
  - id: otelcol-ebpf-profiler-linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    dir: _build
    binary: otelcol-ebpf-profiler
    ldflags:
      - '{{ .Env.LD_FLAGS }}'
    flags:
      - '{{ .Env.BUILD_FLAGS }}'
archives:
  - id: otelcol-ebpf-profiler
    ids:
      - otelcol-ebpf-profiler-linux
    name_template: '{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}'
checksum:
  name_template: '{{ .ProjectName }}_otelcol-ebpf-profiler{{ if eq .Runtime.Goos "windows" }}_{{ .Runtime.Goos }}{{ end }}_checksums.txt'
signs:
  - cmd: cosign
    args:
      - sign-blob
      - --output-signature
      - ${artifact}.sig
      - --output-certificate
      - ${artifact}.pem
      - ${artifact}
    signature: ${artifact}.sig
    artifacts: all
    certificate: ${artifact}.pem
docker_signs:
  - args:
      - sign
      - ${artifact}
    artifacts: all
sboms:
  - id: archive
    artifacts: archive
  - id: package
    artifacts: package
monorepo:
  tag_prefix: v
partial:
  by: target
nightly:
  version_template: '{{ incpatch .Version}}-nightly.{{ .ShortCommit }}'
  tag_name: nightly-otelcol-ebpf-profiler
  keep_single_release: true
