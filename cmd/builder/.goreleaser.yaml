version: 2
project_name: opentelemetry-collector-releases
env:
  - COSIGN_YES=true
  - LD_FLAGS=-s -w -X go.opentelemetry.io/collector/cmd/builder/internal.version={{ .Version }}
  - BUILD_FLAGS=-trimpath
  - CONTAINER_IMAGE_EPHEMERAL_TAG={{ if .IsNightly }}nightly{{ else }}latest{{ end }}
  - GOPROXY=https://proxy.golang.org,direct
  - CGO_ENABLED=0
release:
  github:
    owner: open-telemetry
    name: opentelemetry-collector-releases
  make_latest: "false"
  header: '### Images and binaries for collector distributions here: https://github.com/open-telemetry/opentelemetry-collector-releases/releases/tag/{{ .Tag }}'
builds:
  - id: builder-linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - ppc64le
      - riscv64
    binary: ocb
    ldflags:
      - '{{ .Env.LD_FLAGS }}'
    flags:
      - '{{ .Env.BUILD_FLAGS }}'
  - id: builder-darwin
    goos:
      - darwin
    goarch:
      - amd64
      - arm64
    binary: ocb
    ldflags:
      - '{{ .Env.LD_FLAGS }}'
    flags:
      - '{{ .Env.BUILD_FLAGS }}'
  - id: builder-windows
    goos:
      - windows
    goarch:
      - amd64
    binary: ocb
    ldflags:
      - '{{ .Env.LD_FLAGS }}'
    flags:
      - '{{ .Env.BUILD_FLAGS }}'
archives:
  - formats:
      - binary
snapshot:
  version_template: '{{ .Tag }}-next'
checksum:
  name_template: checksums.txt
changelog:
  disable: "true"
signs:
  - cmd: cosign
    args:
      - sign-blob
      - --output-signature
      - ${artifact}.sig
      - --output-certificate
      - ${artifact}.pem
      - ${artifact}
    signature: ${artifact}.sig
    artifacts: all
    certificate: ${artifact}.pem
docker_signs:
  - args:
      - sign
      - ${artifact}
    artifacts: all
    if: $SKIP_SIGNS != 'true'
sboms:
  - id: archive
    artifacts: archive
  - id: package
    artifacts: package
monorepo:
  tag_prefix: cmd/builder/
  dir: .core/cmd/builder
nightly:
  version_template: '{{ incpatch .Version}}-nightly.{{ .ShortCommit }}'
  tag_name: nightly-builder
  keep_single_release: true
